'''
<리스트> [요소,요소,요소]
(1) 값을 접근하는 방법 인덱스 => 인덱싱, 슬라이싱
(2) 추가,수정,삭제 가능합니다.
(3) 리스트에서 사용가능한 내장메서드(=리스트가 지원하는 기능들)



<이차원리스트> [[],[],[],[],[],[]]
(1) 값을 접근하는 방법  : 인덱스 => 인덱싱, 슬라이싱

'''
# <변수>
# 변수 = 데이터(7가지 데이터타입)
# '=' : 오른쪽의 데이터를 왼쪽변수에 저장하다.

alpha = ['a', 'b', 'c', 'd']
# 문제) 0번째(순서, 인덱스) 값을 뽑아서 출력해보자.
alpha[0]
print(alpha[0])

lst = [
        # 열(모든타입다 됩니데. 리스트 빼고, 숫자 ,문자)
        [0.0, 0.5, 0.1, 0.4, 0.2, 1.0, 1.0, 0.9],  # 행(=리스트)
        [1.0, 0.9, 0.0, 0.0, 0.1, 0.0, 0.3, 0.1],
        [0.2, 1.0, 0.1, 0.2, 0.3, 0.7, 1.0, 0.9],
        [0.9, 0.7, 0.5, 0.4, 0.2, 0.3, 0.0, 0.1],
        [0.1, 0.2, 0.3, 0.1, 0.6, 0.0, 1.1, 0.3],
        [0.4, 0.6, 0.7, 0.8, 0.0, 1.0, 1.1, 1.2],
        [0.0, 0.1, 0.1, 0.3, 0.2, 0.1, 0.8, 0.9]
]

# 0번째 값을 뽑아서 출력해보자.
l = lst[0]
print(lst[0])

# 지금 출력된 값에서 2번째값을 뽑아보자.
print(lst[0][2])

# 행: 리스트
# 열 : 리스트빼고 문자, 숫자, bool

print("==== 교체알고리즘 =====")
a = 10
b = 5


####
temp = a
a = b
b = temp
print(a, b)


# 리스트 내부에서 교채하기

alpha = ['a', 'b', 'c', 'd','e','f']
# a <> f
# b <> e
# c <> d

# (0) 0번째에 z로 수정하고 싶어요.
alpha[0]='z'
print(alpha)

# (1) z <> f 교체해보세요.
# - 직접적으로 'z','f'를 사용금지
temp=alpha[0]
alpha[0]=alpha[-1]
alpha[-1]=temp
print(alpha)


# (2) b <> e 교체하기

temp=alpha[1]
alpha[1]=alpha[-2]
alpha[-2]=temp
print(alpha)

# (3) # c <> d 교체하기
temp=alpha[2]
alpha[2]=alpha[-2]
alpha[-2]=temp
print(alpha)


alphabet_all = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

alpha_arr=[]

# 내가 하고자 하는거 : => 예상결과(리스트)
# 기능 : 전체 리스트를 반으로 쪼개기
# (1) 전체리스트의 절반 크기를 구한다.
# (2)

# 리스트갯수(26개)만큼 반복
print(len(alphabet_all)/2)



# 코드 번역 :(1) 리스트갯수(26개)만큼 반복
# (2) 리스트 길이/2 = 숫자
# for i in range(len(alphabet_all)):
#     alpha_half=len(alphabet_all)/2 # 13.0
    
#     print(alpha_half)



#######################
# 문제) 각 요소/의 길이를 구해서/ 리스트로 출력하시오.
# (1) 각 요소를 출력하시오. 
# (2) 출력된 요소의 길이를 구해서 출력하시오.
# (3) 새로운 리스트를 만들어서 출력된 길이를 리스트에 추가해주기
# (4) 새로운 리스트 출력하기


lst = ["We", "are", "the", "world!"]

lst_arr=[]

for i in range(len(lst)):
  # print(lst[i])
  # print(len(lst[i]))
  lst_arr.append(len(lst[i]))

print(lst_arr)



#########################
# 문제) 두 리스트가 얼마나 유사한지를 알고싶다. 서로 같은 요소의 갯수를 출력하시오.

s1 = ['a',"b", "c"]
s2 = ['com', "b", "d", "p", "c"]
# 예상결과 : 2

# (1) s1 모든 요소를 뽑아보기
# (2) 출력된 값(s1모든 값) 이 s2(리스트)에 포함되어있다면? 출력된 값을 s3에 추가하기
# (3) 리스트의 길이 출력하기

s3=[]
cnt = 0

for i in range(len(s1)):
  # print(s1[i])
  if s1[i] in s2:
    cnt +=1
    s3.append(s1[i])

print(len(s3),cnt)


# 리스트
# 

